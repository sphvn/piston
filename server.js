// Generated by LiveScript 1.2.0
(function(){
  var con, prt, srv, wss, ref$, dropWhile, takeWhile, d, setDecoder, buffer, ser;
  con = require('connect');
  prt = require('serialport').SerialPort;
  srv = require('ws').Server;
  wss = new srv({
    port: 8000
  });
  ref$ = require('prelude-ls').Str, dropWhile = ref$.dropWhile, takeWhile = ref$.takeWhile;
  d = {};
  setDecoder = function(dn){
    var d;
    return d = require("./decoders/" + dn);
  };
  buffer = "";
  this.unchunker = function(chunk){
    var message;
    buffer += chunk;
    buffer = dropWhile((function(it){
      return it !== "$";
    }), buffer);
    message = takeWhile((function(it){
      return it !== ";";
    }), buffer);
    if (message.length >= 1) {
      buffer = dropWhile((function(it){
        return it !== ";";
      }), buffer);
      return message;
    }
  };
  ser = new prt("/dev/tty.usbmodem1d11", {
    baudrate: 9600
  }, false);
  ser.on('data', function(chunk){
    return unchunker(chunk);
  });
  ser.on('error', function(msg){
    return console.log("error: " + msg);
  });
  wss.on('connection', function(ws){
    return ws.send('connected');
  });
  con().use(con['static'](__dirname)).listen(8080);
}).call(this);
