// Generated by LiveScript 1.2.0
(function(){
  var ref$, dropWhile, span, unpack, moment, length, toArray, unpackTss, buffer;
  ref$ = require('prelude-ls').Str, dropWhile = ref$.dropWhile, span = ref$.span;
  unpack = require('../unpacker.js').unpack;
  moment = require('moment');
  length = function(it){
    return it.length;
  };
  toArray = function(x){
    return Array.prototype.slice.call(x);
  };
  unpackTss = function(b, c){
    return unpack.apply(this, toArray(arguments).concat([':', '\r']));
  };
  buffer = "";
  this.bufferSize = function(){
    return length(buffer);
  };
  this.flush = function(){
    return buffer = "";
  };
  this.receive = function(chunk){
    var msgs, ref$, buf, msg;
    if (this.bufferSize() >= 16000) {
      this.flush();
    }
    msgs = [];
    for (;;) {
      ref$ = unpackTss(buffer, chunk), buf = ref$[0], msg = ref$[1];
      buffer = buf;
      if (msg == null) {
        return msgs;
      }
      msgs.push(msg);
      chunk = "";
    }
  };
  this.decode = function(msg){
    var talker, sentence, _identifier, _depth, _corrDepth, _heave, _quality, _roll, _pitch;
    talker = "";
    sentence = "TSS-Sounder";
    _identifier = msg.substr(1, 6);
    _depth = msg.substr(8, 6);
    _corrDepth = msg.substr(15, 6);
    _heave = msg.substr(22, 5);
    _quality = msg.substr(27, 1);
    _roll = msg.substr(28, 5);
    _pitch = msg.substr(34);
    return {
      talker: talker,
      sentence: sentence,
      identifier: _identifier,
      depth: parseFloat(_depth) / 100.0,
      corrDepth: parseFloat(_corrDepth) / 100.0,
      heave: parseFloat(_heave) / 100.0,
      quality: _quality,
      pitch: parseFloat(_pitch) / 100.0,
      roll: parseFloat(_roll) / 100.0
    };
  };
}).call(this);
